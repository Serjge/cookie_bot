import TelegramBot from 'node-telegram-bot-api'
import dotenv from 'dotenv'
import { getCookie } from './cookies';

dotenv.config()

const token = process.env.TOKEN || ''
const bot = new TelegramBot(token, { polling: true })

const start = async () => {

  await bot.setMyCommands([
    { command: 'start', description: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' },
    { command: 'info', description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' },
  ])

  bot.on('message', async ({ text, chat }) => {
    const { id, first_name } = chat

    switch (text) {
      case '/start' :
        await bot.sendSticker(id, 'https://tlgrm.ru/_/stickers/9b3/d81/9b3d817d-08d9-4a00-ba40-d289d253d0bf/12.webp')
        return bot.sendMessage(id, `–ü—Ä–∏–≤–µ—Ç, ${ first_name }! –¢—ã –ø–æ–ø–∞–ª –Ω–∞ –ø–µ—á–µ–Ω—å–∫–∏! üç™`, {
          reply_markup: {
            keyboard: [
              [
                { text: '–•–æ—á—É –ø–µ—á–µ–Ω—å–∫—É' },
              ],
            ],
            one_time_keyboard: false, resize_keyboard: true,
          },
        })

      case '/info':
        return bot.sendMessage(id, `–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å—É–¥—å–±—ã –∏ —Å–æ–≤–µ—Ç –æ—Ç –ü–µ—á–µ–Ω—å–∫–∏! üç™`)

      case '–•–æ—á—É –ø–µ—á–µ–Ω—å–∫—É':
        await bot.sendMessage(id, getCookie(), { parse_mode: 'HTML' })
        return bot.sendSticker(id, 'https://tlgrm.ru/_/stickers/9b3/d81/9b3d817d-08d9-4a00-ba40-d289d253d0bf/192/31.webp')

      default:
        return bot.sendMessage(id, `–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑! )`)
    }
  })
}

start()